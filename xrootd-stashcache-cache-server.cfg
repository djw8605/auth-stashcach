all.export  /
set cachedir = /cache

all.adminpath /var/spool/xrootd
all.pidpath /var/run/xrootd

xrootd.trace emsg login stall redirect
ofs.trace all
xrd.trace all
cms.trace all

pss.trace all

ofs.osslib  libXrdPss.so
#This is using access to data in the stash federation via redirector
pss.origin  redirector.osgstorage.org:1094
pss.cachelib libXrdFileCache.so

pfc.cachedir  $(cachedir)
pfc.nramprefetch 4
pfc.nramread 4

xrootd.seclib /usr/lib64/libXrdSec.so
sec.protocol /usr/lib64 gsi \
  -certdir:/etc/grid-security/certificates \
  -cert:/etc/grid-security/xrd/xrdcert.pem \
  -key:/etc/grid-security/xrd/xrdkey.pem \
  -crl:1 \
  -authzfun:libXrdLcmaps.so \
  -authzfunparms:--lcmapscfg,/etc/xrootd/lcmaps.cfg,--loglevel,4|useglobals \
  -gmapopt:10 \
  -authzto:3600

# Enable the authorization module, even if we have an unauthenticated instance.
ofs.authorize 1
acc.audit deny grant

# Run the authenticated instance on port 443 (Xrootd and HTTPS)
# Notice authenticated and unauthenticated instances use separate auth
# files.
if named stashcache-auth
pss.origin  red-gridftp4.unl.edu:1094
acc.authdb /etc/xrootd/Authfile-stashcache-auth
sec.protbind * gsi
xrd.protocol http:8443 libXrdHttp.so
else

# Unauthenticated instance runs on port 1094 (Xrootd) and 8000 (HTTP/HTTPS)
acc.authdb /etc/xrootd/Authfile-stashcache
sec.protbind * none
xrd.protocol http:8000 libXrdHttp.so
fi

http.cadir /etc/grid-security/certificates
http.cert /etc/grid-security/xrd/xrdcert.pem
http.key /etc/grid-security/xrd/xrdkey.pem
http.secxtractor /usr/lib64/libXrdLcmaps.so
http.listingdeny yes
http.staticpreload http://static/robots.txt /etc/xrootd/stashcache-robots.txt

all.sitename Syracuse # e.g. all.sitename Nebraska
xrd.report uct2-collectd.mwt2.org:9931
xrootd.monitor all auth flush 30s window 5s fstat 60 lfn ops xfr 5 dest redir fstat info user uct2-collectd.mwt2.org:9930

